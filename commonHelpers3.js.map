{"version":3,"file":"commonHelpers3.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast/dist/js/iziToast.min.js\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nfunction addLeadingZero(value) {\n  return value < 10 ? `0${value}` : value;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let userSelectedDate;\n\n  // Get the current date and time\n  const now = new Date();\n\n  // Initialize flatpickr with the current date and time\n  const datetimePicker = flatpickr(\"#datetime-picker\", {\n    enableTime: true,\n    time_24hr: true,\n    minuteIncrement: 1,\n    defaultDate: now, // Set the default date to the current date and time\n    onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n\n      const startButton = document.querySelector('[data-start]');\n\n      if (userSelectedDate <= now) {\n        iziToast.error({\n          title: 'Invalid Date',\n          message: 'Please choose a date in the future',\n          position: 'topRight'\n        });\n        startButton.disabled = true;\n      } else {\n        startButton.disabled = false;\n      }\n    },\n  });\n\n  document.querySelector('[data-start]').addEventListener('click', () => {\n    const updateTimeInterval = setInterval(() => {\n      updateTimerUI();\n    }, 1000);\n  });\n\n  function updateTimerUI() {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    const { hours, minutes, seconds } = convertMs(timeDifference);\n\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n  }\n});"],"names":["addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","userSelectedDate","now","flatpickr","selectedDates","startButton","iziToast","updateTimerUI","currentTime","timeDifference"],"mappings":"+IAKA,SAASA,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,CACpC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,IAAIC,EAGJ,MAAMC,EAAM,IAAI,KAGOC,EAAU,mBAAoB,CACnD,WAAY,GACZ,UAAW,GACX,gBAAiB,EACjB,YAAaD,EACb,QAAQE,EAAe,CACrBH,EAAmBG,EAAc,GAEjC,MAAMC,EAAc,SAAS,cAAc,cAAc,EAErDJ,GAAoBC,GACtBI,EAAS,MAAM,CACb,MAAO,eACP,QAAS,qCACT,SAAU,UACpB,CAAS,EACDD,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACL,CAAG,EAED,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CAC1C,YAAY,IAAM,CAC3CE,GACD,EAAE,GAAI,CACX,CAAG,EAED,SAASA,GAAgB,CACvB,MAAMC,EAAc,IAAI,KAClBC,EAAiBR,EAAmBO,EAEpC,CAAE,MAAAV,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKL,EAAUc,CAAc,EAE5D,SAAS,cAAc,cAAc,EAAE,YAAchB,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcN,EAAeO,CAAO,CAC9E,CACH,CAAC"}