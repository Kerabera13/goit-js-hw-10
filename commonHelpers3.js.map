{"version":3,"file":"commonHelpers3.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast/dist/js/iziToast.min.js\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n      let userSelectedDate;\n\n      const now = new Date();\n\n      const datetimePicker = flatpickr(\"#datetime-picker\", {\n        enableTime: true,\n        time_24hr: true,\n        minuteIncrement: 1,\n        defaultDate: now,\n        onClose(selectedDates) {\n          userSelectedDate = selectedDates[0];\n\n          const startButton = document.querySelector('[data-start]');\n\n          if (userSelectedDate <= now) {\n            iziToast.error({\n              title: 'Invalid Date',\n              message: 'Please choose a date in the future',\n              position: 'topRight'\n            });\n            startButton.disabled = true;\n          } else {\n            startButton.disabled = false;\n          }\n        },\n      });\n\n      document.querySelector('[data-start]').addEventListener('click', () => {\n        const updateTimeInterval = setInterval(() => {\n          updateTimerUI();\n        }, 1000);\n      });\n\n      function updateTimerUI() {\n        const currentTime = new Date();\n        const timeDifference = userSelectedDate - currentTime;\n\n        const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n        document.querySelector('[data-days]').textContent = addLeadingZero(days);\n        document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n        document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n        document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n      }\n\n      function addLeadingZero(value) {\n        return value < 10 ? `0${value}` : value;\n      }\n\n      function convertMs(ms) {\n        const second = 1000;\n        const minute = second * 60;\n        const hour = minute * 60;\n        const day = hour * 24;\n\n        const days = Math.floor(ms / day);\n        const hours = Math.floor((ms % day) / hour);\n        const minutes = Math.floor(((ms % day) % hour) / minute);\n        const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n        return { days, hours, minutes, seconds };\n      }\n    });"],"names":["userSelectedDate","now","flatpickr","selectedDates","startButton","iziToast","updateTimerUI","currentTime","timeDifference","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"+IAKA,SAAS,iBAAiB,mBAAoB,IAAM,CAC9C,IAAIA,EAEJ,MAAMC,EAAM,IAAI,KAEOC,EAAU,mBAAoB,CACnD,WAAY,GACZ,UAAW,GACX,gBAAiB,EACjB,YAAaD,EACb,QAAQE,EAAe,CACrBH,EAAmBG,EAAc,GAEjC,MAAMC,EAAc,SAAS,cAAc,cAAc,EAErDJ,GAAoBC,GACtBI,EAAS,MAAM,CACb,MAAO,eACP,QAAS,qCACT,SAAU,UACxB,CAAa,EACDD,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACT,CAAO,EAED,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CAC1C,YAAY,IAAM,CAC3CE,GACD,EAAE,GAAI,CACf,CAAO,EAED,SAASA,GAAgB,CACvB,MAAMC,EAAc,IAAI,KAClBC,EAAiBR,EAAmBO,EAEpC,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAElE,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAC9E,CAED,SAASE,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,CACnC,CAED,SAASF,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACP,CAAK"}